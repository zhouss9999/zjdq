package wy.qingdao_atmosphere.mobile.web;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import wy.qingdao_atmosphere.mobile.domain.AirCollect;
import wy.qingdao_atmosphere.mobile.domain.AirGoodRate;
import wy.qingdao_atmosphere.mobile.service.AirAppService;
import wy.qingdao_atmosphere.onemap.domain.KqzlColl;
import wy.util.datapersistence.Dao.BaseaddDao;

@Controller
public class AirAppController {
	
	@Autowired
	private BaseaddDao baseaddDao;
	
	/*@Autowired 
	private BaseService baseService;*/
	
	@Autowired
	private AirAppService airAppService;
	
	
	/**===================================================================================================
	 * ================================================一手机端-首页===========================================*/	
	/**
	 * @author zzb
	 * @description 首页-获取城市空气质量以及天气预报(部分完成)
	 */
	@RequestMapping(value = "/getSKQfCity.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public Map<String, Object> getSKQfCity(HttpServletRequest request){
		Logger.getLogger("").info("------------首页-获取城市空气质量数据以及天气预报数据---");
		
		Map<String, Object> resultMap = new LinkedHashMap<String, Object>();
		
		AirCollect kqzl = airAppService.getSKQ4City(request);
		
		resultMap.put("kqzl", kqzl);
		//resultMap.put("tqyb", "暂无数据");
		
		return resultMap;
	}
	
	
	/**
	 * @author zzb
	 * @description 首页-获取收藏夹城市列表以及监测数据
	 */
	@RequestMapping(value = "/getSKQfCitys.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public List<AirCollect> getSKQfCitys(HttpServletRequest request){
		Logger.getLogger("").info("------------首页-获取收藏夹城市列表以及监测数据---");
		
		List<AirCollect> cityList = airAppService.getSKQ4Citys(request);
		
		return cityList;
	}
	
	
	/**
	 * @author zzb
	 * @description 首页-获取收藏时间
	 */
	@RequestMapping(value = "/getSCollTime.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public Map<String, Object> getSCollTime(){
		Logger.getLogger("").info("------------首页-获取收藏时间--");
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
		Map<String, Object> map = new LinkedHashMap<String, Object>();
		
		map.put("colltime", sdf.format(new Date()));
		return map;
	}
	
	
	/**
	 * @author zzb
	 * @description 首页-城市收藏(添加城市空气质量信息)
	 */
	@RequestMapping(value="/addSCity.do",method = RequestMethod.POST,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public int addSCity(HttpServletRequest request){
		Logger.getLogger("").info("------------首页-城市收藏(添加城市空气质量信息)---");
		
		int objid = baseaddDao.baseAdd(request,  3, "3010001");
		
		return objid;
	}
	
	/**
	 * @author zzb
	 * @description 首页-城市移除(移除城市空气质量信息)
	 */
	@RequestMapping(value="/delSCity.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public int delSCity(HttpServletRequest request){
		Logger.getLogger("").info("------------首页-城市移除(移除城市空气质量信息)---");
		
		//多个objid用逗号隔开
		String objids = (request.getParameter("objid") == null || "".equals(request.getParameter("objid"))) ? "0" : request.getParameter("objid");
		
		int status = baseaddDao.delDataByObjids(objids, "");
		
		return status;
	}
	
	
	/**
	 * @author zzb
	 * @description 首页-获取城市下的站点列表以及监测数据
	 */
	@RequestMapping(value = "/getSKQfSites.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public List<KqzlColl> getSKQfSites(HttpServletRequest request){
		Logger.getLogger("").info("------------首页-获取城市下的站点列表以及监测数据---");
		
		List<KqzlColl> resultList = airAppService.getSKQ4Sites(request);
		
		return resultList;
	}
	
	/**
	 * @author zzb
	 * @description 首页-单个站点监测数据详情
	 */
	@RequestMapping(value = "/getSKQfSite.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public Map<String, Object> getSKQfSite(HttpServletRequest request){
		Logger.getLogger("").info("------------首页-单个站点监测数据详情---");
		
		Map<String, Object> resultMap = airAppService.getSKQ4Site(request);
		
		return resultMap;
	}
	

	/**===================================================================================================
	 * ================================================一手机端-大气地图===========================================*/		
	/**
	 * @author zzb
	 * @description 大气地图-获取城市所有站点坐标以及监测参数数据(浓度)
	 */
	@RequestMapping(value = "/getMNDfSites.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public List<KqzlColl> getMNDfSites(HttpServletRequest request){
		Logger.getLogger("").info("------------大气地图-获取城市所有站点坐标以及监测参数数据(浓度)---");
		
		List<KqzlColl> resultList = airAppService.getMND4Sites(request);
		
		return resultList;
	}
	
	
	/**
	 * @author zzb
	 * @description 大气地图-获取单个站点监测数据详情(浓度)
	 */
	@RequestMapping(value = "/getMNDfSite.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public Map<String, Object> getMNDfSite(HttpServletRequest request){
		Logger.getLogger("").info("------------大气地图-获取单个站点监测数据详情(浓度)---");
		
		Map<String, Object> resultMap = airAppService.getMND4Site(request);
		
		return resultMap;
	}
	
	
	/**
	 * @author zzb
	 * @description 大气地图-获取城市所有站点坐标以及监测参数数据(优良率)
	 */
	@RequestMapping(value = "/getMYLfSites.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public List<AirGoodRate> getMYLfSites(HttpServletRequest request){
		Logger.getLogger("").info("------------大气地图-获取城市所有站点坐标以及监测参数数据(优良率)---");
		
		List<AirGoodRate> resultList = airAppService.getMYL4Sites(request);
		
		return resultList;
	}
	
	
	/**
	 * @author zzb
	 * @description 大气地图-获取单个站点监测数据详情(优良率)
	 */
	@RequestMapping(value = "/getMYLfSite.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public Map<String, Object> getMYLfSite(HttpServletRequest request){
		Logger.getLogger("").info("------------大气地图-获取单个站点监测数据详情(优良率)---");
		
		Map<String, Object> resultMap = airAppService.getMYL4Site(request,30);
		
		return resultMap;
	}
	
	
	/**===================================================================================================
	 * ================================================一手机端-大气排名===========================================*/	
	/**
	 * @author zzb
	 * @description 大气排名-获取城市所有站点实时AQI排名
	 */
	@RequestMapping(value = "/getRAQfSites.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public List<KqzlColl> getRAQfSites(HttpServletRequest request){
		Logger.getLogger("").info("------------大气排名-获取城市所有站点实时AQI排名---");
		
		List<KqzlColl> resultList = airAppService.getRAQ4Sites(request);
		
		return resultList;
	}
	
	
	/**
	 * @author zzb
	 * @description 大气排名-获取单个站点AQI数据详情
	 */
	@RequestMapping(value = "/getRAQfSite.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public Map<String, Object> getRAQfSite(HttpServletRequest request){
		Logger.getLogger("").info("------------大气排名-获取单个站点AQI数据详情---");
		
		Map<String, Object> resultMap = airAppService.getMND4Site(request);
		
		return resultMap;
	}
	
	
	/**
	 * @author zzb
	 * @description 大气排名-获取城市所有站点近7天优良率排名
	 */
	@RequestMapping(value = "/getRYLfWeeks.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public List<AirGoodRate> getRYLfWeeks(HttpServletRequest request){
		Logger.getLogger("").info("------------大气排名-获取城市所有站点近7天优良率排名---");
		
		List<AirGoodRate> resultList = airAppService.getRYLSites(request, "7 day");
		
		return resultList;
	}
	
	
	/**
	 * @author zzb
	 * @description 大气排名-获取单个站点近7天优良率详情
	 */
	@RequestMapping(value = "/getRYLfWeek.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public Map<String, Object> getRYLfWeek(HttpServletRequest request){
		Logger.getLogger("").info("------------大气排名-获取单个站点近7天优良率详情---");
		
		Map<String, Object> resultMap = airAppService.getMYL4Site(request,7);
		
		return resultMap;
	}
	
	
	/**
	 * @author zzb
	 * @description 大气排名-获取城市所有站点近30天优良率排名
	 */
	@RequestMapping(value = "/getRYLfMonths.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public List<AirGoodRate> getRYLfMonths(HttpServletRequest request){
		Logger.getLogger("").info("------------大气排名-获取城市所有站点近30天优良率排名---");
		
		List<AirGoodRate> resultList = airAppService.getRYLSites(request, "30 day");
		
		return resultList;
	}
	
	
	/**
	 * @author zzb
	 * @description 大气排名-获取单个站点近30天优良率详情
	 */
	@RequestMapping(value = "/getRYLfMonth.do",method = RequestMethod.GET,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public Map<String, Object> getRYLfMonth(HttpServletRequest request){
		Logger.getLogger("").info("------------大气排名-获取单个站点近30天优良率详情---");
		
		Map<String, Object> resultMap = airAppService.getMYL4Site(request,30);
		
		return resultMap;
	}
	
	
	/**===================================================================================================
	 * ================================================一手机端-系统信息===========================================*/	
	/**
	 * @author zzb
	 * @description 系统信息-意见反馈
	 */
	@RequestMapping(value="/suggestion.do",method = RequestMethod.POST,produces={"application/json;charset=utf-8"})
	@ResponseBody
	public int suggestions(HttpServletRequest request){
		Logger.getLogger("").info("------------系统信息-意见反馈------");
		
		int objid = baseaddDao.baseAdd(request,  7, "7010001");
		
		return objid;
	}
	
}
