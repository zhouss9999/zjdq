package wy.qingdao_atmosphere.weatheranalyze.web;

import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import wy.qingdao_atmosphere.weatheranalyze.service.WeatherAnalyzeService;

/**
 * @author xsq
 * @description 气象分析Controller层接口调用类
 * 
 */
@Controller
public class WeatherAnalyzeController {
	
	private WeatherAnalyzeService weatherAnalyzeService;
	
	public WeatherAnalyzeService getWeatherAnalyzeService() {
		return weatherAnalyzeService;
	}
	@Resource
	public void setWeatherAnalyzeService(WeatherAnalyzeService weatherAnalyzeService) {
		this.weatherAnalyzeService = weatherAnalyzeService;
	}

	/**
	 * @description 根据气场类型和时间获取WRF信息
	 * @param weathertype参数：WindMap(风场)、RainMap(降雨)、PressureMap(气压)、TemperatureMap(温度)、RHMap(相对湿度)
	 * @param forecastDate 日期
	 * @return Map
	 */
	@RequestMapping(value = "/getWRFWeatherData.do", method = RequestMethod.GET, produces = { "application/json;charset=utf-8" })
    @ResponseBody
	public Map<String, Object> getWRFWeatherData(HttpServletRequest request){
		String weatherType = (request.getParameter("weatherType") == null || "".equals(request.getParameter("weatherType"))) ? "" : request.getParameter("weatherType");
		String forecastDate = (request.getParameter("forecastDate") == null || "".equals(request.getParameter("forecastDate"))) ? "" : request.getParameter("forecastDate");		
		Logger.getLogger("").info("根据气场类型为："+weatherType+"时间为："+forecastDate+" 获取WRF气象信息");
		return weatherAnalyzeService.getWRFWeatherData(weatherType, forecastDate);
	}
}
